Setup:
======

# Initial setup is mostly easy.  These steps are what I do to bring an
# account on a new system in to the dotfiles fold.  You have to do
# this manually to get everything in place, but once you do the shell
# init file in dotfiles will provide the alias and such.

$ git clone git@github.com:dcantrell/.dotfiles.git di
$ mv di/.dotfiles $HOME
$ mv di/.git $HOME/.dotfiles
$ mv di/.* di/bin $HOME
$ rmdir di
$ alias dotfiles='git --git-dir=$HOME/.dotfiles/.git --work-tree=$HOME'
$ dotfiles config --local status.showUntrackedFiles no

# Add dotfiles from $HOME using 'dotfiles' in place of the git command,
# commit and push as you do with git.  For example:
#
#    dotfiles add .emacs
#    dotfiles commit -m "Add .emacs"
#    dotfiles push
#
# You can call this alias whatever you want.  'dotfiles' may seem
# long, but I used that to avoid aliasing 'df' to this git command.


Setting up a new system:
========================

# Install and create a local account for yourself.  On first login, do
# this:

$ mkdir $HOME/.dotfiles
$ git clone --separate-git-dir=$HOME/.dotfiles/.git \
            https://github.com/dcantrell/.dotfiles.git $HOME

# If this fails, you may need to clone to a separate directory first,
# then move things in place:

$ git clone --separate-git-dir=$HOME/.dotfiles/.git \
            https://github.com/dcantrell/.dotfiles.git tmpdotfiles
$ rsync -rv --exclude '.git' tmpdotfiles/ $HOME/
$ rm -rf tmpdotfiles
